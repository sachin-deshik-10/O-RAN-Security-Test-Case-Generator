{
    "Malicious xApps deployed on the Near-RT RIC": {
        "key_issue_title": "Malicious xApps deployed on the Near-RT RIC",
        "key_issue_detail": "xApps on the Near-RT RIC can collect near real-time information from E2 Nodes and influence behavior of E2 Nodes thereby impacting cell performance and delivery of services to a group of UEs or a single UE. The security requirements for onboarding and hosting xApps should be defined to reduce the risk of unauthorized, untrusted, or malicious xApps to be deployed into the Near-RT RIC. Malicious xApps could be onboarded onto the Near-RT RIC with the intent of manipulating or negatively impacting the delivery of services to subscribers, the RAN, or the core network. Malicious xApps could also be onboarded onto the Near-RT RIC with the intent of accessing, manipulating or negatively impacting the privacy of subscribers, the RAN or the core network.",
        "security_threats": [
            "Malicious xApps attaining unauthorized access to the Near-RT RIC and E2 Nodes",
            "Malicious xApps abusing radio network information and control capabilities over RAN functions",
            "Malicious xApp impacting service for a subscriber or a dedicated area",
            "Malicious xApp exploiting UE identification, tracking UE location and changing UE slice priority"
        ],
        "potential_security_requirements": [
            "xApps shall be authenticated during onboarding using a signature that is generated by the xApp Solution Provider and validated by the Service Provider.",
            "xApps shall be validated during Registration to the Near-RT RIC platform using signatures from both the Service Provider and the xApp Solution Provider."
        ],
        "key_issue_relation": ["T-NEAR-RT-01"],
        "tags": [
            "Malicious xApps",
            "Near-RT RIC",
            "E2 Nodes",
            "Cell performance",
            "Service delivery",
            "Security requirements",
            "Onboarding",
            "Hosted xApps",
            "Unauthorized access",
            "Abuse of network capabilities",
            "Service impact",
            "Privacy impact",
            "Authentication",
            "Signature validation",
            "Solution Provider",
            "Service Provider",
            "Registration",
            "RAN functions",
            "Radio network information",
            "UE identification",
            "UE tracking",
            "UE location",
            "UE slice priority"
        ]
    },
    "Compromised xApp": {
        "key_issue_title": "Compromised xApp",
        "key_issue_detail": "Vulnerabilities can potentially exist in any xApp. Those can be e.g.: Security misconfiguration, such enabled but unnecessary protocols, Weak or misconfigured authentication and authorization, A malicious xApp an untrusted source may intentionally provide, A backdoor intentionally inserted in the xApp by a trusted source, An attacker submitting requests without prior authentication and authorization by executing an injection attack to manipulate configurations, access logs, perform remote code execution, etc. If attackers can find an exploitable xApp, they can disrupt the offered network service and potentially take over another xApp or the near-RT RIC. The actual consequences may vary. For example, an attacker may gain the ability to alter data transmitted by any accessible API, extract sensitive information, etc.",
        "security_threats": [
            "Security misconfiguration",
            "Weak authentication and authorization",
            "Malicious xApps from an untrusted source",
            "Backdoors in trusted xApps",
            "Vulnerabilities in trusted apps"
        ],
        "potential_security_requirements": [
            "xApps images shall be authenticated during onboarding using a signature that is generated by the xApp Solution Provider and validated by the Service/Cloud Provider and telco operator",
            "xApps instances shall be validated during Registration to the Near-RT RIC platform using signatures from both the Service/Cloud Provider and the xApp Solution Provider. Signatures made from certificates reaching the end of their lifetime shall be renewed before the certificate times out (signatures provided by the xApp Solution Provider might be ignored if the signature of the Service/Cloud Provider is valid)",
            "xApp APIs shall be provided with proper Authentication/Authorization schemas"
        ],
        "key_issue_relation": [],
        "tags": [
            "Compromised xApp",
            "Vulnerabilities",
            "Security misconfiguration",
            "Protocol vulnerabilities",
            "Authentication vulnerabilities",
            "Authorization vulnerabilities",
            "Malicious xApps",
            "Untrusted source",
            "Backdoors",
            "Injection attacks",
            "Configuration manipulation",
            "Access log manipulation",
            "Remote code execution",
            "Network service disruption",
            "xApp takeover",
            "Near-RT RIC",
            "API security",
            "Data alteration",
            "Sensitive information extraction",
            "xApp Solution Provider",
            "Service Provider",
            "Cloud Provider",
            "Telco operator",
            "Image authentication",
            "Signature validation",
            "Registration validation",
            "Certificate renewal",
            "Authentication/Authorization schemas"
        ]
    },
    "Conflicting xApps": {
        "key_issue_title": "Conflicting xApps",
        "key_issue_detail": "xApps can change RAN parameters to optimize a specific network metric, which could result in conflicting actions between xApps. Conflicting xApps can unintentionally or maliciously impact O-RAN system functions such as mobility management, admission controls, radio resource control, and load balancing to degrade the performance or availability of the network. The functional split between the Near-RT RIC and the E2-Node depends on the available xApps and the capabilities exposed by the O-gNB. This can create possible conflicts between the decisions taken by the Near-RT RIC and the O-gNB that could lead to instability in the network, which introduces vulnerabilities that could be exploited by threat actors.",
        "security_threats": [
            "DoS from an xApp intentionally creating RRM decisions that conflict with gNB internal decisions",
            "Degradation of performance from an xApp intentionally creating RRM decisions that conflict with other xApp decisions"
        ],
        "potential_security_requirements": ["The solution should make use of the existing, but currently optional, E2 Guidance Request Procedure during xApp Registration to mitigate conflicts arising from new xApps. The purpose of the E2 Guidance procedures is to allow xApps to obtain guidance from the Conflict Mitigation function in the Near-RT RIC. The Conflict Mitigation function is intended to resolve potentially overlapping or conflicting requests from multiple xApps, but some conflict mitigation messages and procedures are FFS"],
        "key_issue_relation": ["T-xApp-02"],
        "tags": []
    },
    "Isolation between xApps": {
        "key_issue_title": "Isolation between xApps",
        "key_issue_detail": "The Near-RT RIC enables near real time control and optimization of RAN elements and resources via fine-grained data collection and actions over E2 interface, and includes open interfaces (A1, O1) to the management and orchestration system (SMO). This will be achieved using a collection of xApps, with each xApp providing a specific functionality by consuming a specific subset of data or producing data for other xApps or Near-RT RIC platform. To provide its desired functionality, the xApps would interact with other Near-RT RIC platform components. In a multi-vendor environment, where 3rd party xApps and those provided by the RIC vendor are deployed together, an xApp can be used to impact the other co-located xApps/Near-RT RIC platform thus creating a noisy neighbour effect where an xApp can overconsume the underlying shared resources provided by the Near-RT RIC platform like CPU, memory, I/O bandwidth, etc. and can negatively affect the performance of other co-located xApps and potentially other CNFs sharing the same underlying platform. It's also possible that xApps have different levels of access to the data and resources available on Near-RT RIC. Appropriate isolation is needed for xAPPs that have different threat profiles.",
        "security_threats": [
            "overconsume the platform resources shared by all xApps, creating a noisy neighbour effect by leaving other co-located xApps with a resource deficit",
            "administer DoS attacks on other co-located xApps and impacting service offered by the xApp under attacks",
            "administer DoS attacks on the Near-RT RIC platform components, impacting the availability of the Near-RT RIC",
            "administer unauthorised access to sensitive real-time information from RAN, persistent configuration used by the Near-RT RIC to control the RAN",
            "probe for vulnerabilities in the underlying system hosting the xApps application and use them to administer attacks on another xApps and the platform"
        ],
        "potential_security_requirements": [
            "Based on xAPPs threat profile, the Near-RT RIC platform shall categorise and isolate xApps into different security groups and define security boundaries. Near-RT RIC platform shall cap the resources allocated to xApps make sure that xApps trying to overconsume the resources are quarantined",
            "Access controls shall be established and enforced for accessing critical data in Near-RT RIC",
            "Communication between security zones shall require mutual authentication and authorization between communicating xApps"
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Compromise of ML data pipelines used in Near-RT RIC": {
        "key_issue_title": "Compromise of ML data pipelines used in Near-RT RIC",
        "key_issue_detail": "The Near-RT RIC contains database(s) which contain historic data collected from UE and RAN information. This historic data can be used to train various ML models used in Near-RT RIC. Also, streaming data may be collected from E2 nodes by some ML based xApps, and used either for training ML models or deriving inferences. ML data pipelines can consist of several ML models, using one or more sources of data for training as well as inference derivation. xApps can have ML pipelines implemented within, or can be using ML pipelines from another xApps that provide analytics services. ML data pipelines can be compromised due to: A potential vulnerability existing in the xApp that implements the ML pipeline, Poisoning of ML training data due to compromised E2 node(s), Poisoning of ML training data due to compromised UE(s), Compromised database(s) which store historic data used for ML training, Compromised interfaces of Near-RT RIC allowing a malicious intruder to alter some of the training data that may be used to train ML models used by xApps",
        "security_threats": [
            "An attacker gains access to the training set of a machine learning model and alters the data (e.g. datasets that are assembled to train, test, and validate an ML system) before the training begins without the knowledge of the machine learning engineers. The training data will already be tampered with and has lost its original quality which will result in modeling on wrong data. Hence, the ML model will no longer be a reliable one since it was trained on bad data and therefore modelling, decisions, predictions, model classifications, detections, etc. will surely not be appropriate. ",
            "A model is online and continues to learn during operational use, modifying its behavior over time. In this case, an attacker can feed the model with bad data and the model can learn from this bad data, and as a result, negatively impact its performance and retrain the ML system to do the wrong thing."
        ],
        "potential_security_requirements": [
            "Secure data storage, and secure data transfer mechanisms shall be implemented in Near-RT RIC.",
            "Authenticated and authorized access to data stores shall be implemented in Near-RT RIC.",
            "Near-RT RIC deployment shall have provision for regular security vulnerability patch updates for xApps.",
            "Integrity of xApps shall be monitored after installation as well as during runtime on a periodic or need basis.",
            "O-Cloud security requirements shall be adhered to, in order to ensure that the interfaces feeding data to ML data pipelines are secured.",
            "Detection of compromised E2 nodes, and filtering ML data pipelines to exclude inputs from such nodes.",
            "Detection of compromised UE, and filtering ML data pipelines to exclude inputs from such UEs."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Altering the ML learning models used in Near-RT RIC": {
        "key_issue_title": "Altering the ML learning models used in Near-RT RIC",
        "key_issue_detail": "",
        "security_threats": [
            "An attacker can illegally access a machine learning model and alter its parameters and thereby influence how it produces results. This can lead to wrong prediction and might result in catastrophic decisions if the results of the predictions were being used to make key business decisions.",
            "An attacker can extract sensitive or confidential data that, through training, are built right into the ML model."
        ],
        "potential_security_requirements": [
            "Integrity of xApps shall be monitored after installation as well as during runtime on a periodic or need basis.",
            "Secure data storage, and secure data transfer mechanisms shall be implemented in Near-RT RIC.",
            "Authenticated and authorized access to data stores shall be implemented in Near-RT RIC.Security measures shall be ensured to allow only authenticated and authorized applications providing ML model updates over the A1 interface."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Data Protection and Privacy in Near-RT RIC Database": {
        "key_issue_title": "Data Protection and Privacy in Near-RT RIC Database",
        "key_issue_detail": "The Near-RT RIC contains database(s) which contain sensitive UE and RAN information, including history of the network state, configurations related to E2 Nodes, cells, bearers, flows, UE identities, and the mappings between them. Overlayed on top of these databases is the shared data layer (SDL) which enables xApp access. There is currently no model for authentication or authorization for the database(s). The Near-RT RIC requires security mechanisms in place to ensure xApps have authenticated access to the database(s) and may access only parts of the database(s) in which they have permission to access. Adverse effects may result if no security mechanisms are in place, such as manipulation of database information.",
        "security_threats": [
            "Perform unauthorized database operations and manipulate database information to impact network service and performance",
            "Export sensitive data from the Near-RT RIC database(s) (data or user privacy threat)",
            "Monitor the database for specific information and take an adverse action"
        ],
        "potential_security_requirements": [
            "Near-RT RIC shall authenticate xApp access to the Near-RT RIC database(s) during SDL registration.",
            "Near-RT RIC shall provide authorized access to Near-RT RIC database(s)."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Onboarding untrusted xApps": {
        "key_issue_title": "Onboarding untrusted xApps",
        "key_issue_detail": "An xApp is an application designed to run on Near-RT RIC. It may consist of one or more microservices. It is independent of Near-RT RIC and may be provided by any third party. As part of offering its service to Near RT-RIC, some of the xApp’s functionalities include communicating with Near-RT RIC platform via Near-RT RIC API, providing the APIs it produces to other xApps and Near-RT RIC, collecting near real-time information from E2 Nodes and influence behaviour of E2 Nodes and accessing Near-RT RIC Databases (via SDL) which gives access to sensitive information related to UE and RAN. Onboarding an untrusted third party xApp onto Near-RT RIC can create serious security issues which can compromise the Near-RT RIC functionality, impact the availability of other xApps and have cascading impact on overall performance of ORAN.",
        "security_threats": [
            "If the xApp is not from a trusted source or is not maintained by a trusted source, it could contain security vulnerabilities or back doors which could be exploited by the attackers and impact Near-RT RIC functions",
            "The untrusted/unverified xApp could provide APIs with weak security (weak or no authentication and authorizaton) and such xApps could be easy target for attackers to break in and propagate lateral movement of attack in the system (towards other xApps).",
            "The untrusted/unverified xApp could expose more services than required and such xApps could expose a large attack surface to the attackers to break in and gain access, manipulate configurations, access logs, insert back doors",
            "The untrusted/unverified xApp can be used to sniff sensitive UE information which can be used by attackers or the untrusted/unverified xApp itself for rogue purposes"
        ],
        "potential_security_requirements": [
            "The xApp shall be compliant to industry standards for API security (eg : OWASP Top 10)",
            "The xApp shall be free of any known software vulnerabilities.",
            "The xApp shall be authenticated before the app is onboarded to the cloud platform and registered onto the Near-RT RIC platform.",
            "The xApp shall support appropriate authorization schemes to make sure that a user accessing its service shall not be able to execute any actions that the user is not authorized for.",
            "The xApp shall harden its service offering by making sure that only required services should be exposed to its users."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "xApp exploitation via malicious A1 policies": {
        "key_issue_title": "xApp exploitation via malicious A1 policies",
        "key_issue_detail": "The Non-RT RIC defines policies that are provided to the Near-RT RIC over the A1 interface. The purpose of the A1 policies is to guide and optimize the RAN, and the policies inform behavior of xApps in the Near-RT RIC. Unauthorized access to the Non-RT RIC enables the creation of 'false policies' that can be issued to the Near-RT RIC for enforcement. Existing Near-RT RIC policies could also be modified to achieve a false policy. False policies passed to the Near-RT RIC would be persistent until they were modified or deleted by the Non-RT RIC or the Near-RT RIC power cycles.",
        "security_threats": [
            "False policies can be created to have numerous impacts to the normal performance of the RAN. A single false A1 policy can target a specific UE, groups of UEs, or an entire cell. A false policy could influence the Near-RT RIC to configure the O-DU and O-RU functions to support Denial of Service (DoS) attacks by simply using feedback data to degrade RAN performance. ",
            "False policies could also be used for the purpose of locating a subscriber or group of subscribers. In this case, the false policy would cause the Near-RT RIC to isolate a subscriber in the O-CU. The Near-RT RIC could also use MIMO beamforming in the O-DU and O-RU to isolate a user onto a single beam. The data feedback from the RAN can include UE location or trajectory information from GPS data. The subscriber location would be attained from access to the Non-RT RIC in the SMO function.",
            "The Near-RT RIC is capable of steering traffic to achieve optimal QoS or QoE performance. A false policy could notionally cause the Near-RT RIC to steer user data to isolate the data in order to facilitate a cyber-attack."
        ],
        "potential_security_requirements": [
            "Security protections are defined for the A1 interface and security work is in process for A1 related APIs and the Non-RT RIC. For example, A1 peering should be established with only trusted sources using TLS 1.2, or higher, and PKI X.509 certificates, as specified in [19].  TLS also provides confidentiality and integrity protection. Additional Near-RT RIC authentication of the A1 policy may be a consideration later, after the above security protections are defined and evaluated.",
            "A perimeter security approach may enable an internal threat actor to conduct a MitM attack on the A1 interface.  Security for the Near-RT should take a zero-trust approach in which security controls are implemented at the Near-RT RIC without assumption of a secure perimeter. The Near-RT RIC could implement security controls consistent with a zero-trust architecture in which there is no assumption of perimeter defenses being provided by other O-RAN functions.  For example, the Near-RT RIC could provide checking and validation of policies received from the Non-RT RIC on the A1 interface."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Near-RT RIC APIs authentication": {
        "key_issue_title": "Near-RT RIC APIs authentication",
        "key_issue_detail": "Like any software, APIs can be compromised, and data can be intercepted. APIs can be manipulated causing service disruptions and can be subject as well to DoS attacks. Authentication, an essential part of secure communication, ensures that an attribute claimed by a given entity (e.g., its identity) is actually correct. In the context of secure communication between xApps and Near-RT RIC platform, the platform shall authenticate all xApps instances and only provide them with the information and services for which they are authorized through the use of the Near-RT RIC APIs, as a key objective to guarantee the validity of the transferred messages. xApps can also act as service producers, exposing APIs to be consumed by other xApps for example. In that case, the xApps 'producers' shall authenticate the instances interested in consuming those xApp services. Authentication is also a prerequisite for conducting authorization which itself is another key issue for API Security. Note that using the xApp registration procedure Near-RT platform performs authentication and validation of the xApp, addressed in solution #1, however xApps, as consumers of the services exposed by Near-RT RIC APIs, are not authenticated as per current O-RAN specifications at the time of requesting those services.",
        "security_threats": [
            "Operating malicious xApp claiming to be genuine in order to request certain services (theft of services) or information (data leakage)",
            "Man in the middle attacks between a genuine xApp and a Near-RT RIC platform API",
            "Querying network or UE information from a compromised xApp to Near-RT RIC platform (e.g. database via SDL API), thereby leaking potentially sensitive data about network and/or UE (potential privacy issues) ",
            "Subscribing a malicious xApp to services provided by the Near-RT RIC platform, such as API-related events notifications, discovery of APIs, E2SM, etc"
        ],
        "potential_security_requirements": [
            "The communication between xApps and Near-RT RIC platform APIs shall be authenticated at least at the transport layer (for e.g., with mutual TLS).",
            "At application layer complementary end to end authentication mechanisms based on JSON Web Tokens (JWTs) may be considered as well."
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "Near-RT RIC APIs authorization": {
        "key_issue_title": "Near-RT RIC APIs authorization",
        "key_issue_detail": "Authorization is the function of specifying and enforcing access rights or privileges to certain resources or services. In the actual context of Near-RT RIC, the platform as API producer shall be responsible to specify those rights/privileges for the platform services as resources to the xApps as consumers. In general, an xApp should only have the required set of permissions to perform the actions for which they are authorized, and no more. Authorization mechanisms are to be enforced by the Near-RT RIC platform among other in the following key API procedures: Discovery of Near-RT RIC APIs: The Near-RT RIC platform shall provide means to restrict xApps from discovery of some published APIs based on configuration policies, E2 Subscription API procedure: The subscription management shall be based on operator's policies. An xApp may be restricted to interface with only a subset of E2 Nodes by such policies. This procedure establishes a set of preconditions that assume authorization procceses 1) xApp has been authorized to issue E2 Subscription API requests, 2) xApp has been authorized to request guidance from Conflict mitigation and 3) xApp Subscription Management has been configured to permit E2 Subscription API requests only from specific list of xApps, E2 Control API procedure: Only authorized xApps may initiate RIC control request messages issued by the Near-RT RIC over the E2 interface to the E2 Nodes, for a specific scope (e.g, E2 Node list, RAN function, etc.), E2 Guidance API procedure: The purpose of this procedure only authorized xApp to obtain guidance from the conflict mitigation platform function prior to initiating an action, SDL API procedures: The precondition to consume the services exposed by SDL API (e.g, client registration, fetch data, notification, store, etc.) is that xApps have been successfully registered and authorized.",
        "security_threats": [
            "Abuse and/or theft of services or information (data leakage), requesting and successfully obtaining them from the platform, e.g, in order to extract potentially sensitive information from the network and/or UEs",
            "Negatively impacting the network performance due to malicious policies over E2 Nodes",
            "Flooding the platform with resource demanding operations that may lead to a Denial of Service attack"
        ],
        "potential_security_requirements": [
            "Near-RT RIC architecture shall provide an authorization framework for the consumption of the services exposed in the platform APIs by the xApps, that takes operator policies into consideration. The framework should be used by the specified API procedures.",
            "The authorization framework may need to consider the level of trust related to the xApp (e.g. 3rd party xApp, RIC-owned xApp, etc.)"
        ],
        "key_issue_relation": [],
        "tags": []
    },
    "xAppID abuse": {
        "key_issue_title": "xAppID abuse",
        "key_issue_detail": "As part of the xApp registration procedure into the Near-RT RIC platform, the platform assigns an identity (ID) to the xApp, so called xApp ID. This xApp ID is assumed to be used in xApps API request messages to the Near-RT RIC platform to facilitate the Near-RT RIC platform the identification of the xApp (API service consumer).  For the platform to trust the xAppID in the xApps request messages it is necessary to bind this xAppID to some trust anchor. Also, the xAppID needs to be uniquely identifying a single xApp instance.",
        "security_threats": [
            "A non-unique xAppID might cause misidentification of an xApp, possibly allowing a potentially malicious xApp to request certain services (theft of services), information (data leakage), or alter existing information",
            "A malicious xApp might use the xAppID assigned to a legitimate xApp to request services or information from Near-RT RIC platform"
        ],
        "potential_security_requirements": [
            "The near-RT RIC shall provide a procedure to embed the xAppID into a trust anchor (e.g., X.509 certificate) assigned to the xApp used for authentication (mTLS) and for authorization (OAuth – client authentication).",
            "The near-RT RIC shall create each xAppID using procedures that avoid duplicates, such as UUID as described in IETF RFC 4122."
        ],
        "key_issue_relation": [],
        "tags": []
    }
}